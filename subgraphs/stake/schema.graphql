type MaxxStake @entity {
  # Contract address
  id: ID!
  # MaxxVault address
  maxxVault: Bytes!
  # MAXX token address
  maxx: Bytes!
  # FreeClaim address
  freeClaim: Bytes!
  # Liquidity Amplifier Address
  liquidityAmplifier: Bytes!
  # Stake Launch Date
  launchDate: BigInt!
  # NFT Base URI
  baseURI: String
  # Total number of stakes
  totalStakes: BigInt!
  # Total active stakes
  totalStakesActive: BigInt
  # Total matured stakes
  totalStakesMatured: BigInt
  # Total withdrawn stakes
  totalStakesWithdrawn: BigInt!
  # Total staked outstanding interest
  totalStakedOutstandingInterest: BigInt
  # Total shares
  totalShares: BigInt!
  # Current share factor
  shareFactor: BigInt!
  # Average stake amount
  avgStakeAmount: BigInt!
  # Average stake duration
  avgStakeDuration: BigInt!
  # Array of accepted NFTs
  acceptedNfts: [Bytes!]!
}

type Stake @entity {
  # Transaction hash
  id: ID!
  name: String!
  owner: Participant!
  amount: BigInt!
  shares: BigInt!
  duration: BigInt!
  startTime: BigInt!
  endTime: BigInt!
  interest: BigInt!
  penalties: BigInt!
  withdrawnTime: BigInt!
  withdrawnAmount: BigInt!
  status: Status!
}

type Participant @entity {
  # User Address
  id: ID!
  # dailyDeposits: [BigInt!]!
  # effectiveDailyDeposits: [BigInt!]!
  # effectiveUserReferrals: [BigInt!]!
  participated: Boolean!
  stakes: [Stake!]! @derivedFrom(field: "owner")
}

type League @entity {
  # ContractAddress
  id: ID!

  countInA: BigInt! # <= 0.000001% of Shares
  countInB: BigInt! # > 0.000001% of Shares
  countInC: BigInt! # > 0.0001% of Shares
  countInD: BigInt! # > 0.001% of Shares
  countInE: BigInt! # > 0.01% of Shares
  countInF: BigInt! # > 0.1% of Shares
  countInG: BigInt! # > 1% of Shares
  countInH: BigInt! # > 10% of Shares
  sortedStakesByShares: [BigInt!]! # sorted stakes by shares
}

enum Status {
  ACTIVE
  MATURED
  WITHDRAWN
  WITHDRAWN_EARLY
  WITHDRAWN_LATE
}
