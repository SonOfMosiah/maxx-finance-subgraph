type MaxxStake @entity {
  # Contract address
  id: ID!
  # MaxxVault address
  maxxVault: Bytes!
  # Amplifier Launch Date
  launchDate: BigInt!
  # Maxx Stake Contract Address
  stake: Bytes!
  # Maxx Finance Token Contract Address
  maxx: Bytes!

  totalStakes: BigInt!
  totalStakesAllTime: BigInt!
  totalStakesActive: BigInt!
  totalStakesMatured: BigInt!
  totalStakesWithdrawn: BigInt!
  totalStakedOutstandingInterest: BigInt!
  totalShares: BigInt!
  # Current share factor
  shareFactor: BigInt!
  avgStakeAmount: BigInt!
  avgStakeDuration: BigInt!
  # allStakes # Call stakes
}

type Day @entity {
  # Day (1-60)
  id: ID!
  maxxAllocation: BigInt!
  effectiveMaticDeposits: BigInt!
  maticDeposited: BigInt!
  totalDeposits: BigInt!
  deposits: [Deposit!]! @derivedFrom(field: "day")
  referrals: [Referral!]! @derivedFrom(field: "day")
}

type Participant @entity {
  # User Address
  id: ID!
  # dailyDeposits: [BigInt!]!
  # effectiveDailyDeposits: [BigInt!]!
  # effectiveUserReferrals: [BigInt!]!
  participated: Boolean!
  deposits: [Deposit!]! @derivedFrom(field: "participant")
  referrals: [Referral!]! @derivedFrom(field: "referrer")
}

type Stake @entity {
  # Transaction hash
  id: ID!
  name: String!
  amount: BigInt!
  totalShares: BigInt!
  startTime: BigInt!
  endTime: BigInt!
  duration: BigInt!
  # interest: BigInt!
  # penalties: BigInt!
  withdrawnTime: BigInt!
  withdrawnAmount: BigInt!
  status: Status!
}

type League @entity {
  # ContractAddress
  id: ID!

  countInA: BigInt! # <= 0.000001% of Shares
  countInB: BigInt! # > 0.000001% of Shares
  countInC: BigInt! # > 0.0001% of Shares
  countInD: BigInt! # > 0.001% of Shares
  countInE: BigInt! # > 0.01% of Shares
  countInF: BigInt! # > 0.1% of Shares
  countInG: BigInt! # > 1% of Shares
  countInH: BigInt! # > 10% of Shares
}

enum Status {
  ACTIVE
  MATURED
  WITHDRAWN
  WITHDRAWN_EARLY
  WITHDRAWN_LATE
}
