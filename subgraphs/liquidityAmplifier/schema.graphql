type LiquidityAmplifier @entity {
  # Contract address
  id: ID!
  # MaxxVault address
  maxxVault: Bytes!
  # Amplifier Launch Date
  launchDate: BigInt!
  # Maxx Stake Contract Address
  stake: Bytes!
  # Maxx Finance Token Contract Address
  maxx: Bytes!
  # Maxx Genesis NFT Contract Address
  maxxGenesis: Bytes!
  # Number of Maxx Genesis NFTs minted
  maxxGenesisMinted: BigInt!
  # Total Matic Deposited
  totalMatic: BigInt!
  # Total Maxx Deposited + referral bonuses
  totalEffectiveMatic: BigInt!
  # Total Matic Deposited / Maxx Allocation
  totalMaxxPerMatic: BigInt
  # Array of all deposits
  deposits: [Deposit!]!
  nextDepositUpdateIndex: BigInt!
  # Array of all referrals
  referrals: [Referral!]!
  nextReferralUpdateIndex: BigInt!
}

type Day @entity {
  # Day (1-60)
  id: ID!
  maxxAllocation: BigInt!
  maticDeposited: BigInt!
  effectiveMaticDeposited: BigInt!
  totalDeposits: BigInt!
  maxxPerEffectiveMatic: BigInt!
  deposits: [Deposit!]! @derivedFrom(field: "day")
  referrals: [Referral!]! @derivedFrom(field: "day")
}

type Participant @entity {
  # User Address
  id: ID!
  # An array of length 60, each element is the total Matic deposited on that day
  dailyDeposits: [BigInt!]!
  # An array of length 60, each element is the total effective Matic deposited on that day
  effectiveDailyDeposits: [BigInt!]!
  # An array of length 60, each element is a boolean indicating whether the user claimed for that day
  participated: Boolean!
  dailyClaimStatus: [Boolean!]!
  # An array of all deposits made by the user
  deposits: [Deposit!]! @derivedFrom(field: "participant")
}

type Deposit @entity {
  # Transaction hash
  id: ID!
  # ID String of the Participant
  participant: Participant!
  # Amount of Matic deposited
  amount: BigInt!
  # Amount after bonus calculations
  effectiveAmount: BigInt!
  # Amount of Maxx
  maxxAmount: BigInt
  # ID String of the Day
  day: Day!
}

type Referral @entity {
  # Transaction hash
  id: ID!
  # ID String of the Referrer
  referrer: Referrer!
  # ID String of the Participant
  referral: Participant!
  # Amount of Matic deposited
  referredAmount: BigInt!
  # Amount after bonus calculations
  effectiveReferredAmount: BigInt!
  # Amount of Maxx
  maxxAmount: BigInt
  # ID String of the Day
  day: Day!
  # Transaction block.timestamp
  timestamp: BigInt!
}

type Referrer @entity {
  # User Address
  id: ID!
  totalReferrals: BigInt!
  totalReferredAmount: BigInt!
  totalBonus: BigInt!
  # Amount referrer can expect to receive when they claim their referrals
  totalMaxxAmount: BigInt
  referrals: [Referral!]! @derivedFrom(field: "referrer")
  status: ClaimStatus!
}

type Claim @entity {
  # Transaction hash
  id: ID!
  # ID String of the Participant
  participant: Participant!
  # Amount of Maxx claimed
  amount: BigInt!
  # DEPOSIT | REFERRAL
  type: ClaimType
}

enum ClaimType {
  DEPOSIT
  REFERRAL
}

enum ClaimStatus {
  PENDING
  CLAIMED
}
